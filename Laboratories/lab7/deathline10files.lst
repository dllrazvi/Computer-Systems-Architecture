     1                                  ; The program will use:
     2                                  ; - the function fopen() to open/create the file
     3                                  ; - the function fclose() to close the created file.
     4                                  
     5                                  bits 32
     6                                  
     7                                  global start
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit, fopen, fclose, fprintf
    11                                  import exit msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 66697273742E747874-         file_name db "first.txt", 0   ; filename to be created
    18 00000009 00                 
    19 0000000A 686168646877413940-         text db "hahdhwA9@",0
    19 00000013 00                 
    20                                      len equ $-text
    21 00000014 257300                      format db "%s",0
    22 00000017 00<rept>                    result times len db 0
    23 00000021 7700                        access_mode db "w", 0       ; file access mode:
    24                                                                  ; w - creates an empty file for writing
    25 00000023 FFFFFFFF                    file_descriptor dd -1       ; variable to hold the file descriptor
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; A file name and a text (defined in the data segment) are given. 
    31                                          ; The text contains lowercase letters, uppercase letters, digits and special characters. 
    32                                          ; Transform all the lowercase letters from the given text in uppercase. 
    33                                          ; Create a file with the given name and write the generated text to file.
    34                                          ; to verify if a string is lowercase letter we need to cmp(str-61(a-hex)) and to see if it is >=0 and then cmp(str-7A(z-hex)) and see if it is <=0
    35                                          
    36                                          ; call fopen() to create the file
    37                                          ; fopen() will return a file descriptor in the EAX or 0 in case of error
    38                                          ; eax = fopen(file_name, access_mode)
    39 00000000 68[21000000]                    push dword access_mode     
    40 00000005 68[00000000]                    push dword file_name
    41 0000000A FF15[00000000]                  call [fopen]
    42 00000010 83C408                          add esp, 4*2                ; clean-up the stack
    43                                  
    44 00000013 A3[23000000]                    mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    45                                          
    46                                          ; check if fopen() has successfully created the file (EAX != 0)
    47 00000018 83F800                          cmp eax, 0
    48 0000001B 7454                            je final
    49 0000001D BE[0A000000]                    mov esi,text 
    50 00000022 B90A000000                      mov ecx, len
    51 00000027 BF[17000000]                    mov edi, result
    52 0000002C FC                              cld
    53                                          repeta:
    54 0000002D AC                                  lodsb ;The byte from the address <DS:ESI> is loaded in AL
    55 0000002E 3C61                                cmp al, 'a'
    56 00000030 720C                                jb et1
    57 00000032 3C7A                                cmp al, 'z'
    58 00000034 7F08                                jnle et1
    59 00000036 2C20                                sub al,32
    60 00000038 AA                                  stosb
    61 00000039 49                                  dec ecx
    62 0000003A E308                                JECXZ print
    63 0000003C EBEF                            jmp repeta 
    64                                          et1:
    65 0000003E AA                                  STOsb
    66 0000003F 49                                  dec ecx
    67 00000040 E302                                JECXZ print
    68 00000042 EBE9                                jmp repeta
    69                                          ; call fclose() to close the file
    70                                          ; fprintf(file_descriptor, format, result)
    71                                      print:
    72 00000044 68[14000000]                    push dword format
    73 00000049 68[17000000]                    push dword result
    74 0000004E FF35[23000000]                  push dword [file_descriptor]
    75 00000054 FF15[00000000]                  call [fprintf]
    76 0000005A 83C40C                          add esp, 4*3
    77                                          ; check if fprintf() has successfully written the text to the file
    78 0000005D 83F800                          cmp eax, 0
    79 00000060 740F                            je final
    80                                          ; call fclose() to close the file
    81                                          ; fclose(file_descriptor)
    82 00000062 FF35[23000000]                  push dword [file_descriptor]
    83 00000068 FF15[00000000]                  call [fclose]
    84 0000006E 83C404                          add esp, 4
    85                                        final:
    86                                          ; exit(0)
    87 00000071 6A00                            push dword 0      
    88 00000073 FF15[00000000]                  call [exit]
