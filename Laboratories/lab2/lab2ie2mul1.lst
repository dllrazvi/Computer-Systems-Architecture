     1                                   bits 32 ;assembling for the 32 bits architecture
     2                                  global start
     3                                  
     4                                  ; we ask the assembler to give global visibility to the symbol called start 
     5                                  ;(the start label will be the entry point in the program) 
     6                                  extern exit ; we inform the assembler that the exit symbol is foreign; it exists even if we won't be defining it
     7                                  import exit msvcrt.dll  ; we specify the external library that defines the symbol
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  import printf msvcrt.dll
    10                                  ; our variables are declared here (the segment is called data) 6
    11                                  segment data use32 class=data
    12 00000000 0100                        e dw 1
    13 00000002 0200                        f dw 2
    14 00000004 0A00                        g dw 10
    15                                  ; the program code will be part of a segment called code
    16                                  segment code use32 class=code
    17                                  start:
    18                                          ;(e+f)*g, words
    19 00000000 66A1[00000000]          mov ax, word [e];
    20 00000006 668B1D[02000000]        mov bx, word [f];
    21 0000000D 6601D8                  add ax,bx;
    22 00000010 668B1D[04000000]        mov bx, word [g];
    23 00000017 66F7E3                  mul bx
    24 0000001A FF15[00000000]          call [exit]
